// Copyright 2019 Google LLC
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.google.cloud.broker.apps.brokerserver.protobuf";
option java_outer_classname = "BrokerProto";

package com.google.cloud.broker.apps.brokerserver.protobuf;


// Get session token request/response --------------------------

message GetSessionTokenRequest {
    repeated string scopes = 1;
    string owner = 2;
    string target = 3;
    string renewer = 4;
}

message GetSessionTokenResponse {
    string session_token = 1;
}

// Renew session token request/response ------------------------

message RenewSessionTokenRequest {
    string session_token = 1;
}

message RenewSessionTokenResponse {
    int64 expires_at = 2;
}

// Cancel session token request/response -----------------------

message CancelSessionTokenRequest {
    string session_token = 1;
}

message CancelSessionTokenResponse {
}

// Get access token request/response ---------------------------

message GetAccessTokenRequest {
    repeated string scopes = 1;
    string owner = 2;
    string target = 3;
}

message GetAccessTokenResponse {
    string access_token = 1;
    int64 expires_at = 2;
}


// Broker service -----------------------------------------

service Broker {
    rpc GetSessionToken(GetSessionTokenRequest) returns (GetSessionTokenResponse) {}
    rpc RenewSessionToken(RenewSessionTokenRequest) returns (RenewSessionTokenResponse) {}
    rpc CancelSessionToken(CancelSessionTokenRequest) returns (CancelSessionTokenResponse) {}
    rpc GetAccessToken(GetAccessTokenRequest) returns (GetAccessTokenResponse) {}
}